# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
name: 'postgresql'

# Set in env on portainer:
# - OP_SERVICE_ACCOUNT_TOKEN for secrets fetching

services:
  init-secrets:
    image: 1password/op:2
    user: '0:0' # Run as root for putting in the secrets dir
    environment:
      # OP_SERVICE_ACCOUNT_TOKEN should be set in Portainer as stack environment variable
      - OP_SERVICE_ACCOUNT_TOKEN=${OP_SERVICE_ACCOUNT_TOKEN}
    volumes:
      - postgresql-secrets:/run/secrets:rw
    command:
      - /bin/bash
      - -c
      - |
        sleep 10000
        set -euo pipefail
        {
          function fetch() {
              local ref="$$1"
              local dest="$$2"
              op read --no-newline "$$ref" > "$$dest"
              echo " got '$$ref' => '$$dest'"
          }
          echo "Fetching all secrets in parallel..."

          fetch "op://heapsinfra/portainer--heapsnas--postgres--root-user/username" "/run/secrets/postgres_root_user" &
          fetch "op://heapsinfra/portainer--heapsnas--postgres--root-user/password" "/run/secrets/postgres_root_password" &

          wait
          chmod 444 /run/secrets/*
        } || {
          echo "Failed to fetch secrets, waiting 5 minutes before exiting"
          sleep 300
          exit 1
        }

  postgresql:
    image: postgres:18
    restart: always
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_root_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_root_password
      - # default DB, don't use for apps
        POSTGRES_DB=postgres
    volumes:
      - postgresql-secrets:/run/secrets:ro
      - postgresql-storage:/var/lib/postgresql/data
    networks:
      - postgresql
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -h localhost -U $(cat $${POSTGRES_USER_FILE}) -d $(cat $${N8N_POSTGRES_DB_FILE:-does_not_exist})',
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      init-secrets:
        condition: service_completed_successfully

# https://docs.docker.com/engine/storage/drivers/
volumes:
  postgresql-secrets:
    driver: local
  postgresql-storage:
    driver: local

networks:
  postgresql:
    driver: bridge
    name: postgresql

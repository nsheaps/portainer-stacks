# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
name: 'cloudflared'

# Set in env on portainer:
# - GITHUB_TOKEN = <pat portainer uses>
# - GITHUB_REPO_OWNER = nsheaps
# - GITHUB_REPO_NAME = portainer-stacks
# - OP_SERVICE_ACCOUNT_TOKEN for secrets fetching

services:
  init-cloudflared-secrets:
    image: 1password/op:2
    user: '0:0' # Run as root for putting in the secrets dir
    environment:
      # OP_SERVICE_ACCOUNT_TOKEN should be set in Portainer as stack environment variable
      - OP_SERVICE_ACCOUNT_TOKEN=${OP_SERVICE_ACCOUNT_TOKEN}
    volumes:
      - cloudflare-secrets:/run/secrets:rw
    command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        {
          COUNT=0
          function fetch() {
              local ref="$$1"
              local dest="$$2"
              echo " getting '$$ref' => '$$dest'"
              op read --no-newline "$$ref" > "$$dest"
              echo " got '$$ref' => '$$dest'"
              COUNT=$((COUNT + 1))
          }
          echo "Fetching all secrets in parallel..."

          fetch "op://heapsinfra/portainer--heapsnas--cloudflared/token" "/run/secrets/cloudflared_token" &

          wait
          chmod 444 /run/secrets/*
          echo "Fetched $$COUNT secrets"
        } || {
          echo "Failed to fetch secrets, waiting 5 minutes before exiting"
          sleep 300
          exit 1
        }
  cloudflared:
    image: cloudflare/cloudflared:2025.9.1
    restart: always
    # cmmand: tunnel --no-autoupdate run --token-file /run/secrets/cloudflared_token
    command: version
    volumes:
      - cloudflare-secrets:/run/secrets:ro
    depends_on:
      init-cloudflared-secrets:
        condition: service_completed_successfully
    networks:
      - cloudflared


# https://docs.docker.com/engine/storage/drivers/
volumes:
  cloudflare-secrets:
    driver: local

# https://docs.docker.com/engine/network/drivers/
networks:
  cloudflared:
    driver: bridge
